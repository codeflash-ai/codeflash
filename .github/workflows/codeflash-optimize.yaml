name: CodeFlash

on:
  # Use pull_request_target for everything to ensure access to secrets
  pull_request_target:
    paths:
      - '**'  # Trigger for all paths

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  optimize:
    name: Optimize new Python code
    environment: external-trusted-contributors
    if: ${{ github.actor != 'codeflash-ai[bot]' }}
    runs-on: ubuntu-latest
    env:
      CODEFLASH_AIS_SERVER: prod
      POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
      CODEFLASH_API_KEY: ${{ secrets.CODEFLASH_API_KEY }}
      CODEFLASH_PR_NUMBER: ${{ github.event.number }}
      COLUMNS: 110
    steps:
      - name: üõéÔ∏è Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Validate PR
        run: |
          # Check for any workflow changes
          if git diff --name-only "${{ github.event.pull_request.base.sha }}" "${{ github.sha }}" | grep -q "^.github/workflows/"; then
            echo "‚ö†Ô∏è Workflow changes detected."

            # Get the PR author
            AUTHOR="${{ github.event.pull_request.user.login }}"
            echo "PR Author: $AUTHOR"

            # Allowlist check
            if [[ "$AUTHOR" == "misrasaurabh1" || "$AUTHOR" == "KRRT7" ]]; then
              echo "‚úÖ Authorized user ($AUTHOR). Proceeding."
            elif [[ "${{ github.event_name }}" == "pull_request_target" && "${{ github.event.pull_request.state }}" == "open" ]]; then
              echo "‚úÖ PR triggered by 'pull_request_target' and is open. Assuming protection rules are in place. Proceeding."
            else
              echo "‚õî Unauthorized user ($AUTHOR) attempting to modify workflows. Exiting."
              exit 1
            fi
          else
            echo "‚úÖ No workflow file changes detected. Proceeding."
          fi

      - name: üêç Set up Python 3.11 for CLI
        uses: astral-sh/setup-uv@v5
        with:
          python-version: 3.11.6

      - name: üì¶ Install dependencies (CLI)
        run: |
          uv tool install poetry
          uv venv
          source .venv/bin/activate
          poetry install --with dev

      - name: ‚ö°Ô∏èCodeflash Optimization
        id: optimize_code
        run: |
          source .venv/bin/activate
          poetry run codeflash
